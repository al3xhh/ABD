package abd.p1.view;

import abd.p1.view.observers.answerSelectorObserver;
import abd.p1.controller.answerSelectorController;
import abd.p1.model.Opcion;
import abd.p1.model.Pregunta;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 * Clase que muestra una ventana para elegir la respuesta a la pregunta en
 * concreto y elegir la relevancia de la misma.
 *
 * @author Alejandro Huertas Herrero 3ºB.
 */
@SuppressWarnings("serial")
public class AnswerSelector extends javax.swing.JDialog implements answerSelectorObserver
{
    private answerSelectorController controller;
    private DefaultListModel<Opcion> answers;

    public AnswerSelector(javax.swing.JDialog parent, boolean modal, answerSelectorController controller)
    {
        super(parent, modal);

        answers = new DefaultListModel<>();

        initComponents();

        this.controller = controller;
        this.controller.setObserver(this);
        this.controller.getOptions();
        
        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        questionTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        answersList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        pointsSlider = new javax.swing.JSlider();
        answerButton = new javax.swing.JButton();
        inviteButton = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Responder pregunta");
        setResizable(false);

        answersList.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        answersList.setModel(answers);
        jScrollPane1.setViewportView(answersList);

        jLabel2.setText("Relevancia:");

        pointsSlider.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        pointsSlider.setMajorTickSpacing(1);
        pointsSlider.setMaximum(10);
        pointsSlider.setMinorTickSpacing(1);
        pointsSlider.setPaintLabels(true);
        pointsSlider.setPaintTicks(true);

        answerButton.setMnemonic('R');
        answerButton.setText("Responder");
        answerButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                answerButtonActionPerformed(evt);
            }
        });

        inviteButton.setMnemonic('I');
        inviteButton.setText("Invitar a un amigo");
        inviteButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                inviteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(questionTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pointsSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(answerButton)
                .addGap(18, 18, 18)
                .addComponent(inviteButton)
                .addContainerGap(175, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(questionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(pointsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answerButton)
                    .addComponent(inviteButton))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void answerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButtonActionPerformed
        if(answersList.getSelectedValue() != null)
        {
            controller.userAnswer(pointsSlider.getValue(), answersList.getSelectedValue());
            setVisible(false);
        }
        else
            JOptionPane.showMessageDialog(null, "Debes seleccionar una opción.", "Error", JOptionPane.ERROR_MESSAGE, new javax.swing.ImageIcon(getClass().getResource("/ErrorIcon.png")));
    }//GEN-LAST:event_answerButtonActionPerformed

    private void inviteButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_inviteButtonActionPerformed
    {//GEN-HEADEREND:event_inviteButtonActionPerformed
        controller.invitation(this);
    }//GEN-LAST:event_inviteButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton answerButton;
    private javax.swing.JList<Opcion> answersList;
    private javax.swing.JButton inviteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider pointsSlider;
    private javax.swing.JLabel questionTitle;
    // End of variables declaration//GEN-END:variables

    @Override
    public void showOptions(Pregunta question)
    {
        questionTitle.setText(question.getEnunciado());

        for (Opcion o: question.getOpciones())
            answers.addElement(o);
    }
}